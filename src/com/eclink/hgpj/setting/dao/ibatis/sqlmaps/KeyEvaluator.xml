<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="KEY_EVALUATOR" >
  <typeAlias alias="KeyEvaluatorVO" type="com.eclink.hgpj.setting.vo.KeyEvaluatorVO"/>
  <resultMap id="resultMap" class="KeyEvaluatorVO" >
    <result column="ID" property="id" jdbcType="INTEGER" />
    <result column="KEY_NO" property="keyNo" jdbcType="VARCHAR" />
    <result column="WINDOW_ID" property="windowId" jdbcType="INTEGER" />
    <result column="WINDOW_NAME" property="windowName" jdbcType="VARCHAR" />
    <result column="ORG_ID" property="orgId" jdbcType="INTEGER" />
    <result column="ORG_NAME" property="orgName" jdbcType="VARCHAR" />
    <result column="CUSTOMS_ID" property="customsId" jdbcType="INTEGER" />
    <result column="CUSTOMS_NAME" property="customsName" jdbcType="VARCHAR" />
    <result column="CREATE_USER" property="createUser" jdbcType="VARCHAR" />
    <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />
    <result column="LAST_UPDATE_USER" property="lastUpdateUser" jdbcType="VARCHAR" />
    <result column="LAST_UPDATE_DATE" property="lastUpdateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <!-- 查询条件 -->
  <sql id="condition">
  	 <dynamic prepend="where">
  	 	<isNotEmpty prepend="and" property="keyNo">
  	 		t.KEY_NO = #keyNo#
  	 	</isNotEmpty>
  	 	<isNotEmpty prepend="and" property="windowId">
  	 		t.WINDOW_ID = #windowId#
  	 	</isNotEmpty>
  	 	<isNotEmpty prepend="and" property="orgId">
  	 		w.ORG_ID = #orgId#
  	 	</isNotEmpty>
  	 	<isNotEmpty prepend="and" property="orgIds">
  	 		w.ORG_ID in ($orgIds$)
  	 	</isNotEmpty>
  	 	<isNotEmpty prepend="and" property="id">
  	 		t.id != #id#
  	 	</isNotEmpty>
     </dynamic>
  </sql>
  <!-- 列表查询 -->
  <select id="queryList" resultMap="resultMap" parameterClass="KeyEvaluatorVO" >
  	<isNotEqual compareValue="0" property="pageSize">
  	<![CDATA[ SELECT TOP (#pageSize#) * FROM (select ROW_NUMBER() over(order by id) as rownum,a.* from ( ]]>
  	</isNotEqual>
	SELECT T.ID,
	       T.KEY_NO,
	       T.WINDOW_ID,
	       W.NAME WINDOW_NAME,
	       R.ORG_ID,
	       R.ORG_NAME,
	       NULL CUSTOMS_ID,
	       NULL CUSTOMS_NAME,
	       T.CREATE_USER,
	       T.CREATE_DATE,
	       T.LAST_UPDATE_USER,
	       T.LAST_UPDATE_DATE
	  FROM KEY_EVALUATOR T
	  LEFT JOIN WINDOW W ON T.WINDOW_ID = W.ID
	  LEFT JOIN ORGANIZATION R ON W.ORG_ID=R.ORG_ID
	    <include refid="condition"/>
    <isNotEqual compareValue="0" property="pageSize">
    ) as a) b where b.rownum>#from#
    </isNotEqual>
  </select>
  <!-- 查询总条数 -->
  <select id="queryListCount" resultClass="int" parameterClass="KeyEvaluatorVO" >
	  SELECT COUNT(1)
	  FROM KEY_EVALUATOR T
	  LEFT JOIN WINDOW W ON T.WINDOW_ID = W.ID
    	<include refid="condition"/>
  </select>
  <!-- 根据ID查找 -->
  <select id="queryById" resultMap="resultMap" parameterClass="int" >
	SELECT T.ID,
	       T.KEY_NO,
	       T.WINDOW_ID,
	       W.NAME WINDOW_NAME,
	       R.ORG_ID,
	       R.ORG_NAME,
	       NULL CUSTOMS_ID,
	       NULL CUSTOMS_NAME,
	       T.CREATE_USER,
	       T.CREATE_DATE,
	       T.LAST_UPDATE_USER,
	       T.LAST_UPDATE_DATE
	  FROM KEY_EVALUATOR T
	  LEFT JOIN WINDOW W ON T.WINDOW_ID = W.ID
	  LEFT JOIN ORGANIZATION R ON W.ORG_ID=R.ORG_ID
	    where T.ID=#id#
  </select>
  
  <!-- 根据keyNo查找 -->
  <select id="queryByKeyNo" resultMap="resultMap" parameterClass="string" >
	SELECT T.ID,
	       T.KEY_NO,
	       T.WINDOW_ID,
	       W.NAME WINDOW_NAME,
	       R.ORG_ID,
	       R.ORG_NAME,
	       NULL CUSTOMS_ID,
	       NULL CUSTOMS_NAME,
	       T.CREATE_USER,
	       T.CREATE_DATE,
	       T.LAST_UPDATE_USER,
	       T.LAST_UPDATE_DATE
	  FROM KEY_EVALUATOR T
	  LEFT JOIN WINDOW W ON T.WINDOW_ID = W.ID
	  LEFT JOIN ORGANIZATION R ON W.ORG_ID=R.ORG_ID
	    where T.KEY_NO=#keyNo#
  </select>
  
  <!-- 删除 -->
  <delete id="deleteKeyEvaluator" parameterClass="KeyEvaluatorVO" >
  	delete KEY_EVALUATOR where ID=#id#
  </delete>
  <!-- 新增 -->
  <insert id="insertKeyEvaluator" parameterClass="KeyEvaluatorVO" >
    insert into KEY_EVALUATOR (KEY_NO, WINDOW_ID, CREATE_USER, CREATE_DATE, LAST_UPDATE_USER,
      LAST_UPDATE_DATE)
    values (#keyNo:VARCHAR#, #windowId:INTEGER#, #createUser:VARCHAR#,
      #createDate:TIMESTAMP#, #lastUpdateUser:VARCHAR#, #lastUpdateDate:TIMESTAMP#)
    <selectKey resultClass="java.lang.Integer" keyProperty="id" >
         SELECT IDENT_CURRENT('KEY_EVALUATOR')
    </selectKey>
  </insert>
  <!-- 更新 -->
  <update id="modifyKeyEvaluator" parameterClass="KeyEvaluatorVO" >
    update KEY_EVALUATOR
    set KEY_NO = #keyNo:VARCHAR#,
      WINDOW_ID = #windowId:INTEGER#,
      LAST_UPDATE_USER = #lastUpdateUser:VARCHAR#,
      LAST_UPDATE_DATE = #lastUpdateDate:TIMESTAMP#
    where ID = #id:INTEGER#
  </update>
</sqlMap>